############################################################
# PulseRain M10
############################################################

name=PulseRain
version=1.3.7


compiler.warning_flags=-w
compiler.warning_flags.none=-w
compiler.warning_flags.default=
compiler.warning_flags.more=-Wall
compiler.warning_flags.all=-Wall -Wextra

compiler.path={runtime.tools.M10_compiler.path}/SDCC/bin/
compiler.c.cmd=compiler_dispatch

compiler.c.flags= -c 
compiler.c.elf.flags=
compiler.c.elf.cmd=compiler_dispatch
compiler.S.flags=-c -g1 -O2 -Wa,--gdwarf-2
compiler.cpp.cmd=compiler_dispatch.exe

compiler.cpp.flags=
compiler.ar.cmd=sdar_wrapper
compiler.ar.flags=rcs
compiler.objcopy.cmd=sdobjcopy
compiler.objcopy.eep.flags=-O ihex 
compiler.elf2hex.flags=
compiler.elf2hex.cmd=sdobjcopy
compiler.ldflags=
compiler.size.cmd=mustang_size

compiler.cpudef=-mprocessor=
compiler.ldscript=M10.ld
compiler.upload.cmd=FP51_upload
compiler.includepath={0}/hardware/M10/FP51/cores/FP51
compiler.upload.flags=
library.core.path=./hardware/M10/FP51/cores/FP51
library.path=./hardware/M10/FP51/cores/FP51
compiler.define= -DIDE=Arduino "-I{compiler.path}../include/mcs51"
build.ldscript.path={build.core.path}
build.variant=M10
core.header=Arduino.h

build.extra_flags=

compiler.c.extra_flags=
compiler.c.elf.extra_flags= -I{build.core.path}
compiler.S.extra_flags=
compiler.cpp.extra_flags=
compiler.ar.extra_flags=
compiler.objcopy.eep.extra_flags=
compiler.elf2hex.extra_flags=


recipe.c.o.pattern="{compiler.path}{compiler.c.cmd}"  {compiler.c.flags} {compiler.define} {compiler.c.extra_flags} {build.extra_flags} -I{build.path}/sketch {includes} "{source_file}" -o "{object_file}"
recipe.cpp.o.pattern="{compiler.path}{compiler.cpp.cmd}"  {compiler.cpp.flags} {compiler.define} "{compiler.cpp.extra_flags}" {build.extra_flags} -I{build.path}/sketch {includes} "{source_file}" -o "{object_file}"
recipe.S.o.pattern="{compiler.path}{compiler.cpp.cmd}" {compiler.S.flags} -mprocessor={build.mcu} -DF_CPU={build.f_cpu}  -DARDUINO={runtime.ide.version} -D{build.board} {compiler.define} "{compiler.cpp.extra_flags}" {build.extra_flags} -I{build.path}/sketch {includes} "{source_file}" -o "{object_file}"

recipe.ar.pattern="{compiler.path}{compiler.ar.cmd}"  {compiler.ar.flags} {compiler.ar.extra_flags} "{archive_file_path}"  "{object_file}"
recipe.c.combine.pattern="{compiler.path}{compiler.c.elf.cmd}" {compiler.c.elf.flags} -mprocessor={build.mcu} {compiler.c.elf.extra_flags} -o "{build.path}/{build.project_name}.elf" "{build.core.path}/cpp-startup.S" {object_files} "{build.path}/{archive_file}" -L{build.path} -lm  -T "{build.ldscript.path}/{ldscript}" -T "{build.core.path}/{ldcommon}"
recipe.objcopy.eep.pattern="{compiler.path}{compiler.objcopy.cmd}" {compiler.objcopy.eep.flags} {compiler.objcopy.eep.extra_flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.eep"

recipe.objcopy.hex.pattern="{compiler.path}{compiler.elf2hex.cmd}" {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} "{build.path}/{build.project_name}.elf"
recipe.output.tmp_file={build.project_name}.hex
recipe.output.save_file={build.project_name}.{build.variant}.hex

recipe.size.pattern="{compiler.path}{compiler.size.cmd}" -A "{build.path}/{build.project_name}.elf"
recipe.size.regex=^(?:\.text|\.data|\.bootloader)\s+([0-9]+).*
recipe.size.regex.data=^(?:\.data|\.bss|\.noinit)\s+([0-9]+).*
recipe.size.regex.eeprom=^(?:\.eeprom)\s+([0-9]+).*


recipe.size.pattern="{compiler.path}{compiler.size.cmd}"  "{build.path}/{build.project_name}.map"
recipe.size.regex=^(?:\.reset|\.image_ptr_table|\.app_excpt|\.vector\S*|\.startup|\.init|\.fini|\.ctors|\.dtors|\.header_info|\.dinit|\.text\S*|\.rodata\S*|\.data)\s+([0-9]+).*
recipe.size.regex.data=^(?:\.ram_exchange_data|\.dbg_data|\.sdata|\.sbss|\.data\S*|\.stack|\.bss|\.comment.__use_force_isr_install|\.eh_frame|\.jcr)\s+([0-9]+).*

preproc.includes.flags=-w -x c++ -M -MG -MP
recipe.preproc.includes="{compiler.path}{compiler.cpp.cmd}"  {compiler.cpp.flags} {preproc.includes.flags} -DARDUINO={runtime.ide.version} -D{build.board} -DARDUINO_ARCH_{build.arch} {compiler.define}  -I{build.path}/sketch {includes} "{source_file}"

preproc.macros.flags= -w -x c++ -E -CC

recipe.preproc.macros="{compiler.path}{compiler.cpp.cmd}" {compiler.cpp.flags} {preproc.macros.flags} -DARDUINO={runtime.ide.version} -D{build.board} -DARDUINO_ARCH_{build.arch} {compiler.define}  -I{build.path}/sketch {includes} "{source_file}" -o "{preprocessed_file_path}"

 
###############################################################################
# M10 loader
###############################################################################
upload.tool=M10_upload
tools.M10_upload.cmd=FP51_upload
tools.M10_upload.cmd.windows=FP51_upload
tools.M10_upload.path={runtime.tools.M10_upload.path}

tools.M10_upload.upload.params.verbose=
tools.M10_upload.upload.params.quiet=
tools.M10_upload.upload.pattern="{path}/{cmd}" {upload.verbose} {upload.verify} -p{build.mcu} -c{upload.protocol} -P{serial.port} -b{upload.speed} "-U{build.path}/{build.project_name}.eep"
